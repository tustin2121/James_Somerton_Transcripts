@layer site {
	@media (prefers-color-scheme: dark) {
		:root {
			color-scheme: dark;
			--box-border-cite: gray;
			--box-border-james: orange;
			--box-border-nick: blue;
			--box-border-clip: gray;
			--box-border-credits: gray;
			/* --box-border-from: #00b500; */
			--box-border-comment: gray;
			--box-header-color: gray;
			
			--mark-action-text: gray;			
			--mark-stolen-text: #ffcced;
			--mark-stolen-bg: #47005b;
			--mark-source-text: #c9d1d9;
			--mark-source-bg: #033a16;
			--mark-misinfo-border: #ff0000;
			--mark-yikes-border: #668701;
			--mark-yikes-text: #f6fdeb;
		}
	}
	@media (prefers-color-scheme: light) {
		:root {
			color-scheme: light;
			--box-border-cite: gray;
			--box-border-james: orange;
			--box-border-nick: blue;
			--box-border-clip: gray;
			--box-border-credits: gray;
			/* --box-border-from: green; */
			--box-border-comment: gray;
			--box-header-color: gray;
			
			--mark-action-text: gray;			
			--mark-stolen-text: #41003a;
			--mark-stolen-bg: #f4ccff;
			--mark-source-text: #000000;
			--mark-source-bg: #abf1c4;
			--mark-misinfo-border: #ff0000;
			--mark-yikes-border: #4f6706;
			--mark-yikes-text: #1b2207;
		}
	}

	/* body {
		height: 100%;
		background-color: var(--color-canvas-default);
	} */
	.wrapper {
		max-width: 1200px;
		margin-inline: auto;
	}

	.video-list {
		margin-inline: auto;
		width: fit-content;
		min-width: 70%;
	}

	p:last-child {
		margin-bottom: 0.3em;
	}

}

@layer site {
	compare {
		display: grid;
		position: relative;
		grid-template-rows: auto-flow;
		grid-template-columns: [j-start n-start] 1fr [j-end n-end f-start] 1fr [f-end];
		column-gap: 4px;
		row-gap: 6px;
		margin-block: 6px;
	}
	.podcast compare {
		grid-template-columns: [j-start] 1fr [n-start] 3fr [j-end] 1fr [n-end f-start] 5fr [f-end];
	}
	
	compare :is(james, nick, clip, credits, from, comment, visual, subvideo) {
		display: block;
		border: white 1px solid;
		padding: 0px 8px;
		display: flex;
		flex-direction: column;
	}
	compare james {
		grid-column: j-start / j-end;
		border-color: var(--box-border-james);
	}
	compare nick {
		grid-column: n-start / n-end;
		border-color: var(--box-border-nick);
	}
	compare clip {
		grid-column: j-start / n-end;
		border-color: var(--box-border-clip);
	}
	compare credits {
		grid-column: j-start / n-end;
		border-color: var(--box-border-credits);
	}
	compare from {
		grid-column: f-start / f-end;
		/* border-color: var(--box-border-from); */
		border-color: var(--source-color);
	}
	compare comment {
		grid-column: f-start / f-end;
		border-color: var(--box-border-comment); 
		font-size: smaller;
	}
	compare subvideo {
		grid-column: j-start / f-end;
		border-color: var(--box-border-comment); 
	}
	
	/* Visual Blocks */
	compare:has(visual-line) {
		grid-template-columns: [j-start n-start] 1fr [v-start] 1fr [j-end n-end mid-start] 5ch [mid-mid mid-end f-start] 1fr [v-end] 1fr [f-end];
	}
	compare:has(visual-line) visual {
		grid-column: v-start / v-end;
		border-color: var(--source-color);
	}
	compare visual-line {
		display: block;
		position: relative;
		grid-column: mid-start / mid-mid;
		border-right: gray 3px dashed;
		margin-top: -6px; /* row-gap of compare*/
	}
	compare visual-line span {
		position: absolute;
		font-family: monospace;
		font-size: small;
		left: 0; right: 0;
		text-align: center;
		border-right: var(--source-color) 3px solid;
		margin-right: -3px;
		overflow: clip hidden;
		display: flex;
		flex-direction: column;
		justify-content: space-between;
	}
	compare visual-line span a {
		text-wrap: nowrap;
		white-space: nowrap;
	}
	compare visual-line span.on {
		border-top: var(--source-color) 2px solid;
		background: linear-gradient(to bottom, var(--source-color) -30%, var(--color-canvas-default) 50%);
	}
	compare visual-line span.off {
		border-bottom: var(--source-color) 2px solid;
		background: linear-gradient(to bottom, var(--color-canvas-default) 50%, var(--source-color) 130%);
	}
	compare visual-line span.on.off {
		background: linear-gradient(to bottom, var(--source-color) -30%, var(--color-canvas-default) 50%, var(--source-color) 130%);
	}

	@media (max-width: 800px) {
		compare:has(visual-line) {
			grid-template-columns: [j-start n-start] 1fr [v-start] 3fr [j-end n-end mid-start] 8px [mid-mid mid-end f-start] 3fr [v-end] 1fr [f-end];
		}
		compare visual-line {
			border-right-width: 1px;
		}
		compare visual-line span {
			font-size: 0;
			border-right-width: 1px;
			margin-right: -1px;
		}
	}
	
	.podcast compare james[crosstalk] {
		grid-column: j-start / n-start;
	}
	.podcast compare nick[crosstalk] {
		grid-column: j-end / n-end;
	}
	
	compare :is(james, nick, clip, credits, from, visual, comment)[span="2"] { grid-row: span 2; }
	compare :is(james, nick, clip, credits, from, visual, comment)[span="3"] { grid-row: span 3; }
	compare :is(james, nick, clip, credits, from, visual, comment)[span="4"] { grid-row: span 4; }
	compare :is(james, nick, clip, credits, from, visual, comment)[span="5"] { grid-row: span 5; }
	compare :is(james, nick, clip, credits, from, visual, comment)[span="6"] { grid-row: span 6; }
	compare :is(james, nick, clip, credits, from, visual, comment)[span="7"] { grid-row: span 7; }
	compare :is(james, nick, clip, credits, from, visual, comment)[span="8"] { grid-row: span 8; }
	compare :is(james, nick, clip, credits, from, visual, comment)[span="9"] { grid-row: span 9; }
	compare :is(james, nick, clip, credits, from, visual, comment)[span="10"] { grid-row: span 10; }
	compare :is(james, nick, clip, credits, from, visual, comment)[span="11"] { grid-row: span 11; }
	compare :is(james, nick, clip, credits, from, visual, comment)[span="12"] { grid-row: span 12; }
	compare :is(james, nick, clip, credits, from, visual, comment)[span="13"] { grid-row: span 13; }
	compare :is(james, nick, clip, credits, from, visual, comment)[span="14"] { grid-row: span 14; }
	compare :is(james, nick, clip, credits, from, visual, comment)[span="15"] { grid-row: span 15; }
	compare :is(james, nick, clip, credits, from, visual, comment)[span="16"] { grid-row: span 16; }
	compare :is(james, nick, clip, credits, from, visual, comment)[span="17"] { grid-row: span 17; }
	compare :is(james, nick, clip, credits, from, visual, comment)[span="18"] { grid-row: span 18; }
	compare :is(james, nick, clip, credits, from, visual, comment)[span="19"] { grid-row: span 19; }
	compare :is(james, nick, clip, credits, from, visual, comment)[span="20"] { grid-row: span 20; }
	
	compare :is(from, comment, clip, visual, credits) > header
	{
		display: flex;
		flex-direction: row;
		justify-content: space-between;
		
		font-size: small;
		color: var(--box-header-color);
		border-bottom: var(--box-header-color) 1px solid;
		padding: 2px 4px 0px;
	}
	compare :is(from, comment, clip, visual, credits) > header .timecode::before { content: '('; }
	compare :is(from, comment, clip, visual, credits) > header .timecode::after { content: ')'; }
	compare from > header::before { content: 'Source:'; }
	compare visual > header::before { content: 'Source video:'; }
	compare clip > header::before { content: 'Video Clip:'; }
	compare comment > header::before { content: 'Comment:'; }
	
	compare from.smaller { font-size: smaller; }
	
	compare :is(james, nick, credits, subvideo)::before
	{
		display: block;
		font-size: small;
		color: var(--box-header-color);
		border-bottom: var(--box-header-color) 1px solid;
		padding: 2px 4px 0px;
	}
	compare james::before   { content: 'James:'; }
	compare nick::before    { content: 'Nick:'; }
	compare james[timecode]::before   { content: 'James: (' attr(timecode) ')'; text-align-last: justify; }
	compare nick[timecode]::before    { content: 'Nick: (' attr(timecode) ')'; text-align-last: justify; }
	
	compare james[timecode][mid-text]::before   { content: 'James: ' attr(mid-text) ' (' attr(timecode) ')'; text-align-last: justify; }
	compare james[mid-text]::before             { content: 'James: ' attr(mid-text) ' \00A0\00A0\00A0\00A0\00A0\00A0\00A0\00A0'; text-align-last: justify; }
	
	compare credits.opening::before { content: 'Opening Credits:'; }
	compare credits.closing::before { content: 'Closing Credits:'; }
	compare credits.desc::before { content: 'Video Description:'; }
	compare credits[header]::before { content: attr(header); }
	compare credits[header][timecode]::before { content: attr(header)' (' attr(timecode) ')'; text-align-last: justify; }
	
	compare footer {
		font-size: small;
		color: var(--box-header-color);
		border-top: var(--box-header-color) 1px solid;
		padding: 0px 4px 2px;
		margin-top: auto;
	}
	compare footer[signed]::after {
		content: ' --' attr(signed);
	}
	compare footer li > p {
		margin-block: 0;
	}
	compare footer li > p:last-child {
		margin-bottom: 0;
	}
	
	compare clip hr {
		margin: 0 3em 1em !important;
	}
	
	compare credits blockquote {
		color: unset !important;
			text-align: center;
			background-color: var(--color-canvas-subtle);
			border-inline: 0.25em solid var(--color-border-default);
	}
	
	compare blockquote {
		color: unset !important;
			background-color: var(--color-canvas-subtle);
	}
	
}

@layer markup {
	*.add, ins {
		background-color: var(--color-prettylights-syntax-markup-inserted-bg); 
		color: var(--color-prettylights-syntax-markup-inserted-text);
	}
	*.del, del {
		background-color: var(--color-prettylights-syntax-markup-deleted-bg); 
		color: var(--color-prettylights-syntax-markup-deleted-text);
	}
	*.add, ins {
		text-decoration: underline;
	}
	*.del, del {
		text-decoration: line-through;
	}
	
	sup[cn] {
		color: var(--color-accent-fg);
		font-style: italic;
	}
	sup[cn]:empty::before {
		content: "[citation needed]";
	}
	sup[cn]:not(:empty)::before { content: "["; }
	sup[cn]:not(:empty)::after { content: "]"; }
	
	compare :is(james, nick, clip) mark {
		background-color: var(--mark-stolen-bg);
		color: var(--mark-stolen-text);
		--source-color: var(--mark-stolen-bg);
	}
	compare from mark {
		background-color: var(--mark-source-bg);
		color: var(--mark-source-text);
		background-color: color-mix(in oklab, var(--source-color) 20%, var(--color-canvas-default));
		color: color-mix(in oklab, var(--source-color) 20%, var(--color-fg-default));
	}
	
	compare :is(james, nick, clip) mark[x] {
		background-color: unset;
		border: solid 2px var(--mark-stolen-bg);
	}
	compare :is(james, nick, clip, from) mark[fc] {
		background-color: unset;
		/* border: solid 1px var(--mark-misinfo-border); */
		text-decoration: var(--mark-misinfo-border) wavy underline 1px;
		text-decoration-style: dotted;
		text-underline-offset: 2px;
	}
	compare :is(james, nick, clip) mark[yikes] {
		background-color: unset;
		text-decoration: var(--mark-yikes-border) wavy underline 1px;
		text-decoration-skip-ink: none;
		text-underline-offset: 4px;
		color: var(--mark-yikes-text);
	}
	
	compare :is(james, nick, from, comment, clip, credits) mark:empty {
		/* For use to mark the little number without highlighting it. */
		background-color: unset;
		color: unset;
	}
	compare :is(james, nick, from, comment, clip, credits) mark::before {
		vertical-align: super;
		font-size: x-small;
		font-family: sans-serif;
		font-weight: 600;
		color: var(--color-accent-fg);
	}
}
@layer markup {
	compare u {
		color: var(--mark-action-text);
		text-decoration: none;
	}
	compare details:not([open]) summary::after {
		content: " (Click/Tap here for more details)";
		color: var(--mark-action-text);
	}
}

@layer markup {
	compare :is(james, nick, clip, credits):not([mark]) { 
		counter-reset: left-count;
	}
	compare :is(james, nick, clip, credits) mark:not(:is([fc],[yikes]))::before {
		content: counter(left-count);
	}
	compare :is(james, nick, clip, credits) mark {
		counter-increment: left-count;
		position: relative;
	}
	
	compare :is(from, comment, visual, subvideo):not([mark]) { 
		counter-reset: right-count;
	}
	compare :is(from, comment) mark:not(:is([fc],[yikes]))::before {
		content: counter(right-count);
	}
	compare :is(from, comment) mark {
		counter-increment: right-count;
		position: relative;
	}
	
	compare :is(james, nick, from, comment, clip, credits) mark[num]::before {
		content: attr(num);
	}
}

@layer site {
	compare from:empty {
		filter: opacity(0.50);
		display: flex;
		flex-direction: column;
		justify-content: center;
		position: relative;
		border: unset;
	}
	compare from:empty::before {
		position: absolute;
		left: 4px;
		top: 4px;
		right: 4px;
	}
	compare from:empty::after {
		content: 'No plagiarism found yet';
		font-size: smaller;
		color: var(--color-fg-muted);
		align-self: center;
	}

	compare comment:empty {
		filter: opacity(0.50);
		border: unset;
	}
	compare comment a {
		word-break: break-word;
	}

	compare from :is(h1,h2,h3,h4,h5,h6) {
		margin-block: 0 4px !important;
	}
	compare comment :is(h1,h2,h3,h4,h5,h6) {
		margin-block: 0 4px !important;
	}

	.refs {
		font-size: smaller;
	}
	.refs::before {
		content: attr(header);
		margin-left: -2em;
		font-size: larger;
		border-bottom: 3px solid black;
	}
	.refs.plagiarized::before {
		border-bottom-color: var(--video-box-stolen-bg);
	}
	.refs.misinfo::before {
		border-bottom-color: var(--video-box-fabricated-bg);
	}
	.refs.yikes::before {
		border-bottom-color: var(--video-box-yikes-bg);
	}
	.refs.other::before {
		border-bottom-color: gray;
	}
	.refs .chain-prefix {
		color: gray;
	}
	:target {
		background-color: rgb(255 255 0 / 15%);
	}

	.transcript-start {
		color: gray;
		text-align: center;
		font-size: 12px;
		margin-bottom: 2rem !important;
	}
	.transcript-start::before {
		content: 'Transcript Start';
	}
	section.footnotes {
		position: relative;
		margin-top: 3rem;
	}
	section.footnotes::before {
		content: 'End Transcript';
		position: absolute;
		top: -2rem;
		left: 0; right: 0;
		text-align: center;
	}
	
	sup.footnote-ref a::before { content: '['; }
	sup.footnote-ref a::after { content: ']'; }
	
	.notice-banner {
		background-color: var(--color-canvas-subtle);
		border: 1px solid var(--color-border-default);
		padding: 0.5em;
		margin: 0.5em 0;
		text-align: center;
	}
}

@layer site {
	compare subvideo {
		background-color: var(--color-canvas-default);
		box-shadow: 0px 0px 3em 2em black;
		margin: -4px 4px 4px -4px;
	}
	compare subvideo::before { 
		content: 'Insert Video Here:';
	}
	
	subvideo .video-card {
		margin-inline: auto;
		max-width: 800px;
	}
	
	:is(james, nick, clip)[fade] {
		position: relative;
		z-index: -10;
	}
	:is(james, nick, clip)[fade="out"] {
		margin-bottom: -4em;
	}
	:is(james, nick, clip)[fade="in"] {
		margin-top: -4em;
	}
	/* :is(james, nick, clip)[fade]::after {
		content: ' ';
		position: absolute;
		top: -1px; left: -1px; right: -1px; bottom: -1px;
		z-index: 100;
	}
	:is(james, nick, clip)[fade="out"]::after {
		background: linear-gradient(to bottom, transparent 20%, var(--color-canvas-default) 80%);
	}
	:is(james, nick, clip)[fade="in"]::after {
		background: linear-gradient(to top, transparent 20%, var(--color-canvas-default) 80%);
	} */
}

@layer site {
	a[href^="http:"]::after, 
	a[href^="https:"]::after {
		content: "\f08e";
		font-family: "Font Awesome 6 Free";
		-webkit-font-smoothing: antialiased;
		display: var(--fa-display,inline-block);
		font-style: normal;
		font-variant: normal;
		line-height: 1;
		text-rendering: auto;
		font-weight: 900;
		padding-left: 0.4em;
	}
}

@layer source {
	james a[href^="http:"]::after, 
	james a[href^="https:"]::after {
		font-size: smaller;
	}
	
	.video-card a[href^="http:"]::after, 
	.video-card a[href^="https:"]::after {
		/* content: none !important; */
		content: revert-layer;
	}
}

@layer source {
	.lyrics {
		margin-inline: auto;
		width: max-content;
		/* min-width: 600px; */
		font-family: serif;
		white-space: pre;
	}
	@media (max-width: 600px) {
		.lyrics {
			width: 100%;
			min-width: 0;
		}
	}
	
	q::before { content: none; }
	q::after { content: none; }
	q {
		margin: 0;
		border-left: 0.25em solid var(--color-border-default);
		border-right: 0.25em solid var(--color-border-default);
		background-color: var(--color-canvas-subtle);
	}
	
	blockquote.book-excerpt {
		font-family: serif;
		text-indent: 2em;
	}
	blockquote.book-excerpt > p {
		margin-block: 0;
	}
	
	details[open] > summary {
		border-bottom: 1px solid currentColor;
		padding-bottom: 0.7em;
		margin-bottom: 0.7em;
	}
	
	credits.telos-wide blockquote {
		letter-spacing: 6px; 
		font-family: serif;
	}
}
@layer markup {
	compare q mark, compare mark q, compare blockquote mark {
		background-color: var(--color-canvas-subtle);
		background-color: color-mix(in oklab, var(--source-color), var(--color-canvas-subtle));
	}
}
@layer source {
	details.recs-list {
		--recs-color: #bbb000;
		
		border: 1px solid var(--recs-color);
		padding: 0px 10px;
		border-radius: 10px;
	}
	details.recs-list[open] > summary {
		border-bottom: 1px solid var(--recs-color);
		padding-bottom: 2px;
		margin-bottom: 2px;
	}
	details.recs-list > summary > span {
		color: gray;
	}
	details.recs-list[open] > summary > span {
		display: none;
	}
	.recs-list > p {
		padding: 0;
		margin: 0;
	}
	
	details.recs-list[open] + compare {
		display: none;
	}
	
	.recs-list > div {
		display: flex;
		flex-direction: row;
		flex-wrap: nowrap;
		overflow-x: scroll;
		padding-block: 6px;
		/* Neither of the below are valid at time of writing. --tustin2121 2024-02-04 */
		justify-content: safe space-evenly; /* like "safe center", but space-evenly */
		justify-content: space-evenly start; /* Theoretical "fallback" syntax */
	}
	
	@supports not ((justify-content: safe space-evenly) or (justify-content: space-evenly start)) {
		/* https://dev.to/janeori/css-fix-when-justify-content-space-evenly-overflows-un-center-the-content-4l50 */
		@keyframes detect-scroll {
			from, to { --can-scroll: ; }
		}
		.recs-list > div {
			--start-if-can-scroll: var(--can-scroll) start;
			justify-content: var(--start-if-can-scroll, space-evenly);
			animation: detect-scroll linear;
			animation-timeline: scroll(self inline);
		}
	}
	@supports not (animation-timeline: scroll(self inline)) {
		/* Just give up at this point... */
		.recs-list > div {
			justify-content: start;
		}
	}
	
	.rec {
		display: flex;
		flex-direction: column;
		flex-wrap: nowrap;
		width: 200px;
		border: 1px dotted gray;
		padding-inline: 8px;
		flex: 0 0 auto; /* Make box static in size */
	}
	.rec :first-child {
		align-self: center;
	}
	.rec a::after {
		content: none;
	}
	.rec img {
		width: 160px;
		height: 90px;
		object-fit: cover;
	}
	.rec h1 {
		padding: 0; margin: 0;
		font-size: medium;
	}
	.rec h2 {
		padding: 0; margin: 0;
		font-size: small;
	}
	.rec h3 {
		padding: 0; margin: 0;
		font-size: small;
		font-weight: 400;
		align-self: flex-end;
		color: gray;
		text-align: right;
	}
	.rec h3::before {
		content: 'Recommended by: ';
	}
	.rec h3:empty::before {
		content: none;
	}
	.rec h4 {
		padding: 0; margin: 0;
		font-size: small;
		text-align: center;
	}
}

@layer site {
	:root {
		--source-color: hsl(120, 100%, 50%);
	}
	
	span.hilite {
		background-color: var(--source-color);
		background-color: color-mix(in oklab, var(--source-color), var(--color-canvas-default));
	}
}
@layer source {
	.color-none  { --source-color: hsl(0, 0%, 30%); }
	.color-1     { --source-color: hsl(118, 100%, 30%); }
	.color-2     { --source-color: hsl(187, 100%, 50%); }
	.color-3     { --source-color: hsl(357, 92%, 43%); }
	.color-4     { --source-color: hsl(71, 100%, 52%); }
	.color-5     { --source-color: hsl(232, 100%, 47%); }
	.color-6     { --source-color: hsl(138, 100%, 47%); }
	.color-7     { --source-color: hsl(251, 100%, 75%); }
	.color-8     { --source-color: hsl(0, 52%, 32%); }
	.color-9     { --source-color: hsl(66, 100%, 35%); }
	.color-10    { --source-color: hsl(37, 100%, 16%); }
	.color-11    { --source-color: hsl(34, 98%, 34%); }
	.color-12    { --source-color: hsl(164, 57%, 36%); }
	.color-13    { --source-color: hsl(187, 90%, 19%); }
	.color-14    { --source-color: hsl(342, 27%, 54%); }
	.color-15    { --source-color: hsl(221, 100%, 50%); }
	.color-16    { --source-color: hsl(273, 72%, 33%); }
	.color-17    { --source-color: hsl(197, 47%, 31%); }
	.color-18    { --source-color: hsl(318, 65%, 49%); }
	.color-19    { --source-color: hsl(187, 100%, 39%); }
	
	.color-hbomb { 
		border-image: conic-gradient(
			hsl(59, 100%, 30%), 
			hsl(32, 100%, 30%), 
			hsl(59, 100%, 30%)
		) 1;
		border-width: 2px;
	}
	.color-todd  {
		border-image: conic-gradient( from 45deg,
			hsl(0, 0%, 31%)        0deg  40deg,
			hsl(0, 100%, 30%)     60deg  70deg,
			hsl(221, 100%, 57%)   75deg  76deg,
			hsl(0, 100%, 30%)     80deg 210deg,
			hsl(221, 100%, 57%)  215deg 216deg,
			hsl(0, 100%, 30%)    220deg 270deg,
			hsl(0, 0%, 31%)      280deg 300deg
		) 1;
		border-width: 2px;
	}
	.color-ace_couple {
		border-image: linear-gradient(0deg,
			hsl(  0,   0%, 20%)  0%, hsl(  0,   0%, 20%) 25%,
			hsl(  0,   0%, 55%) 25%, hsl(  0,   0%, 55%) 50%,
			hsl(  0,   0%, 85%) 50%, hsl(  0,   0%, 85%) 75%,
			hsl(300, 100%, 25%) 75%, hsl(300, 100%, 25%) 100%
		) 1;
		border-width: 2px;
	}
	
	compare credits[header="Audience-member:"] {
		border-color: var(--video-box-stolen-bg);
	}
	
	.srcstyle-book {
		font-family: serif;
		text-indent: 3ch;
	}
	
	compare :is(from, comment, clip, visual, credits) > header,
	compare credits::before,
	compare footer {
		font-family: var(--def-font-families);
		text-indent: initial;
		letter-spacing: initial;
	}
}
